/*
 * Base layout active on all pages.
 */

body {
  display: grid;

  grid: 'nav'
        'flash'
        'main'
        'footer'
        / 100%;
}

#nav-stripe {
  grid-area: nav;

  display: grid;
  grid: 'logo' 1fr
        'header-nav' 0.5fr
        / auto;

  @media #{$sm} {
    grid: 'logo header-nav' / auto 1fr;
  }

  >#header-logo {
    grid-area: logo;

    >img {
      display: block;
      max-height: 70px;
      width: auto;
      height: auto;
    }
  }

  >#header-nav {
    grid-area: header-nav;
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    padding-left: 20px;

    @media #{$sm} {
      justify-content: flex-end;
    }

    >a {
      padding: 0 10px;
    }
  }
}

main {
  grid-area: main;
}

#footer-stripe {
  grid-area: footer;
  padding-top: 20px;
  padding-bottom: 20px;

  display: grid;
  grid: auto auto auto / auto;
  grid-row-gap: 20px;

  @media #{$sm} {
    grid: auto / 1fr 1fr 1fr;
    grid-column-gap: 20px;
  }

  >section {
    display: flex;
    flex-direction: column;
    align-items: left;
  }
}

.stripe {
  background-color: $base-background;
  padding: 0 $min-edge-padding;

  &.stripe-accent {
    @include use-accent;
  }

  // When layout is wider than stripe, keep content at max width and centered with padding. This enables the
  // continuation of background color to edges of screen. We also need to account for the scroll bar as that is
  // included in the width of the page.
  @media (min-width: #{$content-max-width + $min-edge-padding * 2 + $scrollbar-width}) {
    padding: 0 calc((100% - #{$content-max-width}) / 2);
  }
}

/*main {
  margin: 0;
}

#nav-stripe {
  // Eat flash-stripe's additional space from the bottom
  margin-bottom: -1lh;

  img#header-logo {
    display: block;
    max-height: 4lh;
    width: auto;
    height: auto;
  }

  nav[role='navigation'] {
    >div {
      text-align: right;
    }
  }
}

#footer-stripe {
  text-align: center;
}

// Stripe that is the width of the page but has padding for the content
.stripe {
  width: 100%;
  margin: 0;
  padding: 0.5lh 0;

  background-color: getColor(background, body);

  // Stripe contents that take the size of a container and are centered
  >.stripe-inner {
    margin: 0 auto;
    max-width: $container-width;
    padding-left: $gutter / 2;
    padding-right: $gutter / 2;
    overflow: visible;
  }

  &.stripe-dark {
    background-color: getColor(background, dark);
    color: getColor(text, inverted);

    h1, h2, h3, h4, h5, h6 {
      color: getColor(text, inverted);
    }

    a {
      color: getColor(text, inverted_link);

      &:hover {
        color: getColor(text, inverted_link_hover);
      }
    }
  }
}

.text-center {
  text-align: center;
}*/
